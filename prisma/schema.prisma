generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(uuid())
  userName     String     @db.VarChar()
  userEmail    String     @unique @db.VarChar()
  userPassword String     @db.VarChar(100)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Pilars       Pilar[]
  Areas        Area[]
  Activities   Activity[]
  Employees    Employee[]
}

model Pilar {
  id           String   @id @default(uuid())
  pilarName    String   @unique @db.VarChar()
  pilarManager String   @db.VarChar()
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  createdBy    User     @relation(fields: [userId], references: [id])
  userId       String
  Areas        Area[]
}

model Area {
  id         String     @id @default(uuid())
  areaName   String     @unique @db.VarChar()
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  pilar      Pilar      @relation(fields: [pilarId], references: [id])
  pilarId    String
  createdBy  User       @relation(fields: [userId], references: [id])
  userId     String
  Activities Activity[]
}

model Activity {
  id           String     @id @default(uuid())
  activityName String     @unique @db.VarChar()
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  area         Area       @relation(fields: [areaId], references: [id])
  areaId       String
  createdBy    User       @relation(fields: [userId], references: [id])
  userId       String
  Employees    Employee[]
}

model Employee {
  id           String   @id @default(uuid())
  employeeCode Int      @unique
  employeeName String   @db.VarChar()
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  activity     Activity @relation(fields: [activityId], references: [id])
  activityId   String
  createdBy    User     @relation(fields: [userId], references: [id])
  userId       String
}
